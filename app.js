// MVP LifeLine AI тАУ All-Zones Frontend Helper with i18n

document.addEventListener("DOMContentLoaded", () => {
  const offlineMode = false;

  const languageSelect = document.getElementById("language");
  const micBtn = document.getElementById("mic-button");
  const speechText = document.getElementById("speech-text");
  const themeToggle = document.getElementById("theme-toggle");
  const moduleCards = document.querySelectorAll(".card");

  // ЁЯМН i18n Translations
  const translations = {
    en: {
      greeting: "Welcome, Hope,<br><span>LetтАЩs grow today.</span>",
      heading: "Welcome to MVP LifeLine",
      tagline: "Your digital hub to Earn. Heal. Grow.",
      get_started: "Get Started",
      description: "MVP LifeLine is built for AfricaтАЩs bold dreamers. A powerful AI app to empower youth emotionally, financially, and professionally."
    },
    fr: {
      greeting: "Bienvenue, Hope,<br><span>Faisons des progr├иs aujourdтАЩhui.</span>",
      heading: "Bienvenue ├а MVP LifeLine",
      tagline: "Votre hub num├йrique pour Gagner. Gu├йrir. Grandir.",
      get_started: "Commencer",
      description: "MVP LifeLine est con├зu pour les r├кveurs audacieux dтАЩAfrique. Une application IA puissante pour autonomiser les jeunes ├йmotionnellement, financi├иrement et professionnellement."
    },
    es: {
      greeting: "Bienvenido, Hope,<br><span>Crecemos hoy.</span>",
      heading: "Bienvenido a MVP LifeLine",
      tagline: "Tu centro digital para Ganar. Sanar. Crecer.",
      get_started: "Comenzar",
      description: "MVP LifeLine est├б hecho para los so├▒adores audaces de ├Бfrica. Una poderosa app de IA para empoderar a los j├│venes emocional, financiera y profesionalmente."
    },
    ar: {
      greeting: "┘Е╪▒╪н╪и┘Л╪з╪М Hope╪М<br><span>┘Д┘Ж╪к┘В╪п┘Е ╪з┘Д┘К┘И┘Е.</span>",
      heading: "┘Е╪▒╪н╪и┘Л╪з ╪и┘Г ┘Б┘К MVP LifeLine",
      tagline: "┘Е┘Ж╪╡╪к┘Г ╪з┘Д╪▒┘В┘Е┘К╪й ┘Д┘Д┘Г╪│╪и. ╪з┘Д╪┤┘Б╪з╪б. ╪з┘Д┘Ж┘Е┘И.",
      get_started: "╪з╪и╪п╪г",
      description: "╪к┘Е ╪е┘Ж╪┤╪з╪б MVP LifeLine ┘Д╪н╪з┘Д┘Е┘К┘Ж ╪г┘Б╪▒┘К┘В┘К╪з. ╪к╪╖╪и┘К┘В ╪░┘Г╪з╪б ╪з╪╡╪╖┘Ж╪з╪╣┘К ┘В┘И┘К ┘Д╪к┘Е┘Г┘К┘Ж ╪з┘Д╪┤╪и╪з╪и ╪╣╪з╪╖┘Б┘К╪з┘Л ┘И┘Е╪з┘Д┘К╪з┘Л ┘И┘Е┘З┘Ж┘К╪з┘Л."
    },
    hi: {
      greeting: "рд╕реНрд╡рд╛рдЧрдд рд╣реИ, Hope,<br><span>рдЖрдЬ рдЖрдЧреЗ рдмрдврд╝рддреЗ рд╣реИрдВред</span>",
      heading: "MVP LifeLine рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ",
      tagline: "рдХрдорд╛рдиреЗ, рдареАрдХ рд╣реЛрдиреЗ рдФрд░ рдмрдврд╝рдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ рдбрд┐рдЬрд┐рдЯрд▓ рдХреЗрдВрджреНрд░ред",
      get_started: "рд╢реБрд░реВ рдХрд░реЗрдВ",
      description: "MVP LifeLine рдЕрдлреНрд░реАрдХрд╛ рдХреЗ рд╕рд╛рд╣рд╕реА рд╕рдкрдиреЗ рджреЗрдЦрдиреЗ рд╡рд╛рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рдмрдирд╛рдпрд╛ рдЧрдпрд╛ рд╣реИред рдпрд╣ рдпреБрд╡рд╛рдУрдВ рдХреЛ рднрд╛рд╡рдирд╛рддреНрдордХ, рдЖрд░реНрдерд┐рдХ рдФрд░ рдкреЗрд╢реЗрд╡рд░ рд░реВрдк рд╕реЗ рд╕рд╢рдХреНрдд рдХрд░рддрд╛ рд╣реИред"
    },
    zh: {
      greeting: "цмвш┐О, Hope,<br><span>шойцИСф╗мф╗КхдйцИРщХ┐уАВ</span>",
      heading: "цмвш┐ОцЭехИ░ MVP LifeLine",
      tagline: "цВичЪДцХ░хнЧцЮвч║╜я╝Ъш╡ЪщТ▒уАБчЦЧцДИуАБцИРщХ┐уАВ",
      get_started: "х╝АхзЛ",
      description: "MVP LifeLine цШпф╕║щЭЮц┤▓цЬЙцвжцГ│чЪДх╣┤ш╜╗ф║║цЙУщАачЪДх╝║хдз AI х║ФчФия╝МхКйхКЫцГЕцДЯуАБш┤вхКбхТМшБМф╕ЪцИРщХ┐уАВ"
    },
    pt: {
      greeting: "Bem-vindo, Hope,<br><span>Vamos crescer hoje.</span>",
      heading: "Bem-vindo ao MVP LifeLine",
      tagline: "Seu centro digital para Ganhar. Curar. Crescer.",
      get_started: "Come├зar",
      description: "O MVP LifeLine ├й feito para os sonhadores ousados da ├Бfrica. Um app de IA poderoso para capacitar os jovens emocional, financeira e profissionalmente."
    },
    ru: {
      greeting: "╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М, Hope,<br><span>╨Ф╨░╨▓╨░╨╣╤В╨╡ ╤А╨░╨╖╨▓╨╕╨▓╨░╤В╤М╤Б╤П ╤Б╨╡╨│╨╛╨┤╨╜╤П.</span>",
      heading: "╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М ╨▓ MVP LifeLine",
      tagline: "╨Т╨░╤И ╤Ж╨╕╤Д╤А╨╛╨▓╨╛╨╣ ╤Ж╨╡╨╜╤В╤А: ╨Ч╨░╤А╨░╨▒╨░╤В╤Л╨▓╨░╤В╤М. ╨Ш╤Б╤Ж╨╡╨╗╤П╤В╤М╤Б╤П. ╨а╨░╤Б╤В╨╕.",
      get_started: "╨Э╨░╤З╨░╤В╤М",
      description: "MVP LifeLine ╤Б╨╛╨╖╨┤╨░╨╜ ╨┤╨╗╤П ╤Б╨╝╨╡╨╗╤Л╤Е ╨╝╨╡╤З╤В╨░╤В╨╡╨╗╨╡╨╣ ╨Р╤Д╤А╨╕╨║╨╕. ╨Ь╨╛╤Й╨╜╨╛╨╡ AI-╨┐╤А╨╕╨╗╨╛╨╢╨╡╨╜╨╕╨╡ ╨┤╨╗╤П ╤Н╨╝╨╛╤Ж╨╕╨╛╨╜╨░╨╗╤М╨╜╨╛╨│╨╛, ╤Д╨╕╨╜╨░╨╜╤Б╨╛╨▓╨╛╨│╨╛ ╨╕ ╨┐╤А╨╛╤Д╨╡╤Б╤Б╨╕╨╛╨╜╨░╨╗╤М╨╜╨╛╨│╨╛ ╤А╨╛╤Б╤В╨░ ╨╝╨╛╨╗╨╛╨┤╨╡╨╢╨╕."
    },
    bn: {
      greeting: "рж╕рзНржмрж╛ржЧрждржо, Hope,<br><span>ржЖрж╕рзБржи ржЖржЬ ржПржЧрж┐ржпрж╝рзЗ ржпрж╛ржЗред</span>",
      heading: "рж╕рзНржмрж╛ржЧрждржо MVP LifeLine-ржП",
      tagline: "ржЖржкржирж╛рж░ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржХрзЗржирзНржжрзНрж░ ржЙржкрж╛рж░рзНржЬржи, ржирж┐рж░рж╛ржоржпрж╝ ржПржмржВ ржмрж┐ржХрж╛рж╢рзЗрж░ ржЬржирзНржпред",
      get_started: "рж╢рзБрж░рзБ ржХрж░рзБржи",
      description: "MVP LifeLine ржЖржлрзНрж░рж┐ржХрж╛рж░ рж╕рж╛рж╣рж╕рзА рж╕рзНржмржкрзНржиржжрж░рзНрж╢рзАржжрзЗрж░ ржЬржирзНржп ржирж┐рж░рзНржорж┐рждред ржПржЯрж┐ ржПржХржЯрж┐ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА AI ржЕрзНржпрж╛ржк ржпрж╛ рждрж░рзБржгржжрзЗрж░ ржорж╛ржирж╕рж┐ржХ, ржЖрж░рзНржерж┐ржХ ржУ ржкрзЗрж╢рж╛ржЧрждржнрж╛ржмрзЗ ржХрзНрж╖ржорждрж╛ржпрж╝ржи ржХрж░рзЗред"
    },
    pg: {
      greeting: "You don show, Hope,<br><span>Make we move today.</span>",
      heading: "Welcome to MVP LifeLine",
      tagline: "Na your digital place to Earn. Heal. Grow.",
      get_started: "Make we start",
      description: "MVP LifeLine na for African youth wey get dream. This na strong AI app wey go help una mentally, financially and skill-wise."
    }
  };

  // ЁЯЧгя╕П Language Switcher
  if (languageSelect) {
    const savedLang = localStorage.getItem("lifeline-lang");
    if (savedLang && translations[savedLang]) {
      languageSelect.value = savedLang;
    }

    const updateLanguage = (lang) => {
      const t = translations[lang] || translations.en;

      document.querySelectorAll("[data-i18n]").forEach(el => {
        const key = el.getAttribute("data-i18n");
        if (t[key]) {
          if (key === "greeting") {
            el.innerHTML = t[key]; // InnerHTML for styled greeting
          } else {
            el.textContent = t[key];
          }
        }
      });

      localStorage.setItem("lifeline-lang", lang);
    };

    updateLanguage(languageSelect.value);

    languageSelect.addEventListener("change", () => {
      updateLanguage(languageSelect.value);
    });
  }

  // ЁЯОи Theme Toggle
  const themes = ["red", "yellow", "blue", "white"];
  let currentThemeIndex = 0;

  if (themeToggle) {
    const savedTheme = localStorage.getItem("lifeline-theme");
    if (savedTheme && themes.includes(savedTheme)) {
      document.body.classList.add(`theme-${savedTheme}`);
      currentThemeIndex = (themes.indexOf(savedTheme) + 1) % themes.length;
    }

    themeToggle.addEventListener("click", () => {
      document.body.classList.remove(...themes.map(t => `theme-${t}`));
      const nextTheme = themes[currentThemeIndex];
      document.body.classList.add(`theme-${nextTheme}`);
      localStorage.setItem("lifeline-theme", nextTheme);
      currentThemeIndex = (currentThemeIndex + 1) % themes.length;
    });
  }

  // ЁЯОд Voice Recognition
  if (micBtn) {
    const SR = window.SpeechRecognition || window.webkitSpeechRecognition;
    if (!SR) {
      micBtn.addEventListener("click", () => {
        speechText.textContent = "тЭМ SpeechRecognition not supported.";
      });
    } else {
      const recog = new SR();
      recog.interimResults = false;

      micBtn.addEventListener("click", () => {
        const selectedLang = languageSelect?.value || "en";
        recog.lang = selectedLang === "pg" ? "en-NG" : `${selectedLang}-NG`;
        recog.start();
      });

      recog.onstart = () => {
        speechText.textContent = "ЁЯОЩя╕П Listening...";
      };

      recog.onerror = (e) => {
        speechText.textContent = "тЭМ Error: " + e.error;
      };

      recog.onresult = (e) => {
        const transcript = e.results[0][0].transcript;
        speechText.textContent = transcript;
        getGPTResponse({ zone: "smartq-access", prompt: transcript });
      };
    }
  }

  // ЁЯзн Module Click Handler
  moduleCards.forEach(card => {
    card.addEventListener("click", e => {
      const zone = card.dataset.zone || "smartq-access";
      const title = card.querySelector("h3")?.innerText || zone;

      if (offlineMode) {
        e.preventDefault();
        const prompt = `I clicked "${title}". Guide me on getting started.`;
        getGPTResponse({ zone, prompt });
      }
    });
  });

  // ЁЯОд Mic Scroll Visibility
  window.addEventListener("scroll", () => {
    if (!micBtn) return;
    micBtn.style.opacity = window.scrollY > 150 ? "1" : "0";
    micBtn.style.pointerEvents = window.scrollY > 150 ? "auto" : "none";
  });
});

// ЁЯдЦ GPT Response Handler
async function getGPTResponse({ zone, prompt }) {
  const replyBox = document.getElementById("gpt-reply-box");
  const replyText = document.getElementById("gpt-reply-text");

  if (!replyBox || !replyText) return;

  replyBox.style.display = "block";
  replyText.textContent = "Thinking...";

  try {
    const res = await fetch("/.netlify/functions/gpt-handler", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ zone, prompt })
    });

    const data = await res.json();
    replyText.textContent = "ЁЯдЦ " + (data.answer || "No response from GPT.");
    replyBox.scrollIntoView({ behavior: "smooth" });
  } catch (err) {
    replyText.textContent = "тЪая╕П GPT error: " + err.message;
  }
      }
